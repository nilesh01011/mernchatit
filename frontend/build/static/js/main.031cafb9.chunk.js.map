{"version":3,"sources":["components/Authentication/login/Login.js","components/Authentication/Signup/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","Context/ChatProvider.js","components/ScrollableChat.js","assets/robot.gif","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","show","setShow","toast","useToast","positions","email","setEmail","password","setPassword","loading","setLoading","history","useHistory","submitHandler","title","status","duration","isClosable","position","config","headers","axios","post","data","localStorage","setItem","JSON","stringify","push","description","response","message","spacing","id","isRequired","color","borderColor","value","type","placeholder","onChange","e","target","width","bg","h","size","onClick","colorScheme","style","marginTop","isLoading","_focus","boxShadow","Signup","name","setName","confirmpassword","setConfirmpassword","pic","setPic","picLoading","setPicLoading","showConfirm","setShowConfirm","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","useEffect","parse","getItem","maxW","centerContent","d","justifyContent","w","m","borderRadius","borderWidth","background","fontSize","textAlign","mb","isFitted","variant","gap","ContainerContent","className","styled","div","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","user","children","useDisclosure","isOpen","onOpen","onClose","display","base","icon","_hover","isCentered","alignItems","flexDir","boxSize","src","alt","md","ChatContext","createContext","ChatState","useContext","ChatProvider","selectedChat","setSelectedChat","setUser","notification","setNotification","chats","setChats","userInfo","Provider","ScrollableChat","map","label","placement","hasArrow","mt","mr","cursor","backgroundColor","marginLeft","padding","maxWidth","marginBottom","content","UserBadgeItem","handleFunction","admin","px","py","fontWeight","pl","UserListItem","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","query","Authorization","token","get","handleRename","put","chatId","chatName","handleAddUser","user1","find","u","groupAdmin","handleRemove","flexWrap","pb","ml","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","io","on","newMessageRecieved","chat","includes","textTransform","isGroupChat","toUpperCase","overflowY","alignSelf","margin","speed","emptyColor","onKeyDown","options","lastTypingTime","Date","getTime","setTimeout","Hello","Chatbox","ChatLoading","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","SearchingContainer","fontFamily","pr","count","effect","Effect","SCALE","notif","n","as","Button","removeItem","borderBottomWidth","pt","Chatpage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.031cafb9.chunk.js","sourcesContent":["import { Button } from '@chakra-ui/button';\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\nimport { VStack } from '@chakra-ui/layout';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useToast } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport './Login.scss';\nimport { AiOutlineEyeInvisible, AiOutlineEye } from 'react-icons/ai';\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const positions = ['top-right'];\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: 'Please Fill all the Feilds',\n        status: 'warning',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setLoading(false);\n      return;\n    }\n\n    // console.log(email, password);\n    try {\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n        },\n      };\n\n      const { data } = await axios.post(\n        '/api/user/login',\n        { email, password },\n        config\n      );\n\n      toast({\n        title: 'Login Successful please refresh the page',\n        status: 'success',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      setLoading(false);\n      history.push('/chats');\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: error.response.data.message,\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing='10px'>\n      <FormControl id='email' isRequired>\n        <FormLabel color='#bee3f8'>Email Address</FormLabel>\n        <Input\n          borderColor='#3b4253'\n          value={email}\n          type='email'\n          placeholder='Enter Your Email Address'\n          onChange={(e) => setEmail(e.target.value)}\n          id='EmailInput'\n        />\n      </FormControl>\n      <FormControl id='loginPassword' isRequired>\n        <FormLabel color='#bee3f8'>Password</FormLabel>\n        <InputGroup>\n          <Input\n            id='passwordInput'\n            value={password}\n            borderColor='#3b4253'\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? 'text' : 'password'}\n            placeholder='Enter your password'\n          />\n          <InputRightElement width='3rem'>\n            <Button\n              id='buttons'\n              bg='transparent'\n              h='1.75rem'\n              size='sm'\n              onClick={handleClick}\n            >\n              {show ? (\n                <AiOutlineEye size={16} />\n              ) : (\n                <AiOutlineEyeInvisible size={16} />\n              )}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme='blue'\n        width='100%'\n        style={{ marginTop: 30 }}\n        onClick={submitHandler}\n        isLoading={loading}\n        bg='#bee3f8'\n        color='#2c5282'\n        id='loginBtn'\n        _focus={{ boxShadow: 'none' }}\n      >\n        Login\n      </Button>\n      {/* <Button\n        variant='solid'\n        width='100%'\n        bg='#E53E3E'\n        _hover={{\n          background: '#C53030',\n        }}\n        color='#fff'\n        onClick={() => {\n          setEmail('guest-example@gmail.com');\n          setPassword('123456');\n        }}\n        _focus={{ boxShadow: 'none' }}\n      >\n        Get Guest User Credentials\n      </Button> */}\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from '@chakra-ui/button';\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\nimport { VStack } from '@chakra-ui/layout';\nimport { useToast } from '@chakra-ui/toast';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { AiOutlineEyeInvisible, AiOutlineEye } from 'react-icons/ai';\nimport './Signup.scss';\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const positions = ['top-right'];\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  const handleConfirmClick = () => setShowConfirm(!showConfirm);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: 'Please Fill all the Feilds',\n        status: 'warning',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: 'Passwords Do Not Match',\n        status: 'warning',\n        duration: 5000,\n        isClosable: true,\n        position: positions,\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n        },\n      };\n      const { data } = await axios.post(\n        '/api/user',\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: 'Registration Successful please refresh the page',\n        status: 'success',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      setPicLoading(false);\n      history.push('/chats');\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: error.response.data.message,\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: 'Please Select an Image!',\n        status: 'warning',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\n      const data = new FormData();\n      data.append('file', pics);\n      data.append('upload_preset', 'chat-app');\n      data.append('cloud_name', 'piyushproj');\n      fetch('https://api.cloudinary.com/v1_1/doqlrg2gx/image/upload', {\n        method: 'post',\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: 'Please Select an Image!',\n        status: 'warning',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing='5px'>\n      <FormControl id='firstInput' isRequired>\n        <FormLabel color='#bee3f8'>First name</FormLabel>\n        <Input\n          id='firstInput'\n          borderColor='#3b4253'\n          placeholder='Enter Your Name'\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id='emailInput' isRequired>\n        <FormLabel color='#bee3f8'>Email Address</FormLabel>\n        <Input\n          id='emailInput'\n          borderColor='#3b4253'\n          type='email'\n          placeholder='Enter Your Email Address'\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id='PasswordInput' isRequired>\n        <FormLabel color='#bee3f8'>Password</FormLabel>\n        <InputGroup size='md'>\n          <Input\n            id='PasswordInput'\n            borderColor='#3b4253'\n            type={show ? 'text' : 'password'}\n            placeholder='Enter Password'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width='3rem'>\n            <Button\n              id='buttons'\n              h='1.75rem'\n              size='sm'\n              onClick={handleClick}\n              bg='transparent'\n            >\n              {show ? (\n                <AiOutlineEye size={16} />\n              ) : (\n                <AiOutlineEyeInvisible size={16} />\n              )}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id='ConfirmInput' isRequired>\n        <FormLabel color='#bee3f8'>Confirm Password</FormLabel>\n        <InputGroup>\n          <Input\n            id='ConfirmInput'\n            borderColor='#3b4253'\n            type={show ? 'text' : 'password'}\n            placeholder='Enter your password again'\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width='3rem'>\n            <Button\n              id='buttons'\n              h='1.75rem'\n              size='sm'\n              onClick={handleConfirmClick}\n              bg='transparent'\n            >\n              {showConfirm ? (\n                <AiOutlineEye size={16} />\n              ) : (\n                <AiOutlineEyeInvisible size={16} />\n              )}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id='picInput'>\n        <FormLabel color='#bee3f8'>Upload your Picture</FormLabel>\n        <Input\n          type='file'\n          p={1.5}\n          accept='image/*'\n          borderColor='#3b4253'\n          id='picInput'\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        width='100%'\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n        bg='#bee3f8'\n        color='#2c5282'\n        id='signUpBtn'\n        _focus={{ boxShadow: 'none' }}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from '@chakra-ui/react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport Login from '../components/Authentication/login/Login';\nimport Signup from '../components/Authentication/Signup/Signup';\nimport { FaUserShield, FaUserPlus } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('userInfo'));\n\n    if (user) history.push('/chats');\n  }, [history]);\n\n  return (\n    <Container maxW='xl' centerContent>\n      <Box\n        d='flex'\n        justifyContent='center'\n        p={3}\n        bg='white'\n        w='100%'\n        m='40px 0 15px 0'\n        borderRadius='lg'\n        borderWidth='1px'\n        borderColor='#3b4253'\n        boxShadow='lg'\n        background='transparent'\n      >\n        <Text fontSize='4xl' textAlign='center' color='#bee3f8'>\n          Chat-It\n        </Text>\n      </Box>\n      {/* Tabs Titls End */}\n      {/* =======step 5 add Login and Registers===== */}\n      <Box\n        color='#d0d2d6'\n        borderColor='#3b4253'\n        mb='30px'\n        w='100%'\n        p={4}\n        borderRadius='lg'\n        borderWidth='1px'\n        boxShadow='lg'\n      >\n        <Tabs isFitted variant='soft-rounded'>\n          <TabList w='100%' mb='1.5em'>\n            <Tab\n              w='50%'\n              gap='1.5'\n              color='#718096'\n              _focus={{ boxShadow: 'none' }}\n            >\n              <FaUserShield />\n              Login\n            </Tab>\n            <Tab\n              w='50%'\n              gap='1.5'\n              _focus={{ boxShadow: 'none' }}\n              color='#718096'\n            >\n              <FaUserPlus />\n              Sign Up\n            </Tab>\n          </TabList>\n          {/* =======step 5 add Login and Registers===== */}\n          <ContainerContent>\n            <TabPanels>\n              <TabPanel className='tabsContent'>\n                {/* ====Login Added==== */}\n                <Login />\n                {/* ====Login Added==== */}\n              </TabPanel>\n              <TabPanel className='tabsContent'>\n                {/* ====SignUp Added==== */}\n                <Signup />\n                {/* ====SignUp Added==== */}\n              </TabPanel>\n            </TabPanels>\n          </ContainerContent>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n\nconst ContainerContent = styled.div`\n  @media screen and (max-width: 576px) {\n    & {\n      & .tabsContent {\n        padding: 0;\n      }\n    }\n  }\n`;\n","import { FormControl } from '@chakra-ui/form-control';\nimport { Input } from '@chakra-ui/input';\nimport { Box, Text } from '@chakra-ui/layout';\nimport './styles.scss';\nimport { IconButton, Spinner, useToast } from '@chakra-ui/react';\nimport { getSender, getSenderFull } from '../config/ChatLogics';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport ProfileModal from './miscellaneous/ProfileModal';\nimport ScrollableChat from './ScrollableChat';\nimport Lottie from 'react-lottie';\nimport animationData from '../animations/typing.json';\nimport Hello from '../assets/robot.gif';\n\nimport io from 'socket.io-client';\nimport UpdateGroupChatModal from './miscellaneous/UpdateGroupChatModal';\nimport { ChatState } from '../Context/ChatProvider';\n// const ENDPOINT = 'http://localhost:5000'; // \"https://mernchatit.herokuapp.com\"; -> After deployment\nconst ENDPOINT = 'https://mernchatit.herokuapp.com/';\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n  const positions = ['top-right'];\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit('join chat', selectedChat._id);\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: 'Failed to Load the Messages',\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === 'Enter' && newMessage) {\n      socket.emit('stop typing', selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage('');\n        const { data } = await axios.post(\n          '/api/message',\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit('new message', data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: 'Error Occured!',\n          description: 'Failed to send the Message',\n          status: 'error',\n          duration: 4000,\n          isClosable: true,\n          position: positions,\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('setup', user);\n    socket.on('connected', () => setSocketConnected(true));\n    socket.on('typing', () => setIsTyping(true));\n    socket.on('stop typing', () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on('message recieved', (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit('typing', selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit('stop typing', selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: '28px', md: '30px' }}\n            pb={3}\n            px={2}\n            w='100%'\n            d='flex'\n            justifyContent={{ base: 'space-between' }}\n            alignItems='center'\n            textTransform='capitalize'\n          >\n            <IconButton\n              d={{ base: 'flex', md: 'none' }}\n              icon={<ArrowBackIcon />}\n              bg='#bee3f8'\n              color='#262d3f'\n              _hover={{\n                background: '#98c9e5',\n              }}\n              onClick={() => setSelectedChat('')}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d='flex'\n            flexDir='column'\n            justifyContent='flex-end'\n            p={3}\n            w='100%'\n            h='100%'\n            borderRadius='lg'\n            overflowY='hidden'\n            borderColor='#3b4253'\n            borderWidth='1px'\n          >\n            {loading ? (\n              <Spinner\n                size='xl'\n                w={20}\n                h={20}\n                alignSelf='center'\n                margin='auto'\n                color='#3b4253'\n                speed='0.65s'\n                emptyColor='#bee3f8'\n              />\n            ) : (\n              <div id='messages' className='messages'>\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id='first-name'\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant='filled'\n                bg='transparent'\n                placeholder='Enter a message...'\n                value={newMessage}\n                onChange={typingHandler}\n                borderColor='#bee3f8'\n                _hover={{\n                  background: 'transparent',\n                }}\n                className='chatInputs'\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box\n          h='100%'\n          d='flex'\n          flexDir='column'\n          alignItems='center'\n          justifyContent='center'\n        >\n          <img src={Hello} alt='welcome-images' className='loadingImages' />\n          <Text mt='-70px' fontSize='3xl' pb={3}>\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from '@chakra-ui/icons';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from '@chakra-ui/react';\nimport './style.scss';\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton\n          display={{ base: 'flex' }}\n          icon={<ViewIcon />}\n          onClick={onOpen}\n          bg='#bee3f8'\n          color='#262d3f'\n          _hover={{\n            background: '#98c9e5',\n          }}\n        />\n      )}\n      <Modal size='lg' onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent\n          color='#bee3f8'\n          bg='#262d3f'\n          borderColor='#3b4253'\n          h='410px'\n        >\n          <ModalHeader\n            className='HeaderTitle'\n            fontSize='40px'\n            display='flex'\n            alignItems='center'\n            justifyContent='center'\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            display='flex'\n            flexDir='column'\n            alignItems='center'\n            justifyContent='space-between'\n          >\n            <Image\n              borderRadius='full'\n              boxSize='150px'\n              w='auto'\n              h='140px'\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text className='emailText' fontSize={{ base: '28px', md: '30px' }}>\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter display='flex' justifyContent='center'>\n            <Button\n              bg='#bee3f8'\n              color='#262d3f'\n              className='profileButtons'\n              onClick={onClose}\n            >\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Avatar } from '@chakra-ui/avatar';\nimport { Tooltip } from '@chakra-ui/tooltip';\nimport ScrollableFeed from 'react-scrollable-feed';\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from '../config/ChatLogics';\nimport { ChatState } from '../Context/ChatProvider';\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: 'flex' }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement='bottom-start' hasArrow>\n                <Avatar\n                  mt='7px'\n                  mr={1}\n                  size='sm'\n                  cursor='pointer'\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? '#BEE3F8' : '#B9F5D0'\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: '20px',\n                padding: '5px 15px',\n                maxWidth: '75%',\n                color: '#262d3f',\n                marginBottom: '4px',\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","export default __webpack_public_path__ + \"static/media/robot.0617a419.gif\";","import { CloseIcon } from '@chakra-ui/icons';\nimport { Badge } from '@chakra-ui/layout';\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius='full'\n      m={1}\n      mb={2}\n      variant='solid'\n      fontSize={12}\n      bg='#98c9e5'\n      color='#262d3f'\n      key={user._id}\n      cursor='pointer'\n      fontWeight='650'\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from '@chakra-ui/avatar';\nimport { Box, Text } from '@chakra-ui/layout';\n\nconst UserListItem = ({ user, handleFunction }) => {\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor='pointer'\n      bg='#262d3f'\n      _hover={{\n        background: '#3b4253',\n      }}\n      w='100%'\n      d='flex'\n      alignItems='center'\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius='lg'\n      color='#bee3f8'\n      borderColor='#3b4253'\n    >\n      <Avatar\n        mr={2}\n        size='sm'\n        cursor='pointer'\n        name={user.name}\n        src={user.pic}\n        bg='#bee3f8'\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize='xs'>\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from '@chakra-ui/icons';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from '@chakra-ui/react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { ChatState } from '../../Context/ChatProvider';\nimport UserBadgeItem from '../userAvatar/UserBadgeItem';\nimport UserListItem from '../userAvatar/UserListItem';\nimport './style.scss';\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n  const positions = ['top-right'];\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: 'Failed to Load the Search Results',\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: error.response.data.message,\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName('');\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: 'User Already in group!',\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: 'Only admins can add someone!',\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: error.response.data.message,\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setLoading(false);\n    }\n    setGroupChatName('');\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: 'Only admins can remove someone!',\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: error.response.data.message,\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      setLoading(false);\n    }\n    setGroupChatName('');\n  };\n\n  return (\n    <>\n      <IconButton\n        bg='#bee3f8'\n        color='#262d3f'\n        _hover={{\n          background: '#98c9e5',\n        }}\n        d={{ base: 'flex' }}\n        icon={<ViewIcon />}\n        onClick={onOpen}\n      />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent bg='#262d3f' color='#bee3f8'>\n          <ModalHeader\n            fontSize='35px'\n            d='flex'\n            alignItems='center'\n            justifyContent='center'\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d='flex' flexDir='column' alignItems='center'>\n            <Box w='100%' d='flex' flexWrap='wrap' pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl id='first-name' d='flex'>\n              <Input\n                placeholder='Rename Group chat'\n                mb={3}\n                value={groupChatName}\n                color='#bee3f8'\n                bg='transparent'\n                className='inputsFeilds'\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant='solid'\n                ml={1}\n                mb={3}\n                isLoading={renameloading}\n                onClick={handleRename}\n                bg='#bee3f8'\n                color='#262d3f'\n                _hover={{\n                  background: '#98c9e5',\n                }}\n                d='flex'\n                alignItems='center'\n                justifyContent='center'\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder='Add new user in group'\n                mb={1}\n                bg='transparent'\n                className='inputsFeilds'\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size='xl' />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter d='flex' justifyContent='center' alignItems='center'>\n            <Button\n              bg='#E53E3E'\n              color='#fff'\n              onClick={() => handleRemove(user)}\n              w='180px'\n              className='UpdateBtn'\n              _hover={{\n                background: '#C53030',\n              }}\n            >\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from '@chakra-ui/layout';\nimport SingleChat from './SingleChat';\nimport { ChatState } from '../Context/ChatProvider';\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? 'flex' : 'none', md: 'flex' }}\n      alignItems='center'\n      flexDir='column'\n      p={3}\n      w={{ base: '100%', md: '68%' }}\n      borderRadius='lg'\n      borderWidth='1px'\n      bg='#262d3f'\n      borderColor='#3b4253'\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from '@chakra-ui/layout';\nimport { Skeleton, SkeletonCircle } from '@chakra-ui/skeleton';\n\nconst ChatLoading = () => {\n  return (\n    // sidebar loading chats Skeleton\n    <Stack mt='10px'>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <SkeletonCircle size='9' />\n        <Skeleton w='84%' height='35px' />\n      </div>\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from '@chakra-ui/react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { ChatState } from '../../Context/ChatProvider';\nimport UserBadgeItem from '../userAvatar/UserBadgeItem';\nimport UserListItem from '../userAvatar/UserListItem';\nimport './style.scss';\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const positions = ['top-right'];\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: 'User already added',\n        status: 'warning',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      // console it\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: 'Failed to Load the Search Results',\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: 'Please fill all the feilds',\n        status: 'warning',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: 'New Group Chat Created!',\n        status: 'success',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n    } catch (error) {\n      toast({\n        title: 'Failed to Create the Chat!',\n        description: error.response.data,\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            bg='#262d3f'\n            color='#bee3f8'\n            fontSize='35px'\n            display='flex'\n            justifyContent='center'\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton color='#bee3f8' />\n          <ModalBody\n            bg='#262d3f'\n            color='#bee3f8'\n            display='flex'\n            flexDir='column'\n            alignItems='center'\n          >\n            <FormControl>\n              <Input\n                placeholder='Chat Name'\n                mb={3}\n                borderColor='#3b4253'\n                className='inputesSearch'\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder='Add Users eg: Jack, John, Jane'\n                mb={1}\n                borderColor='#3b4253'\n                className='inputesSearch'\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w='100%' display='flex' flexWrap='wrap'>\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter\n            bg='#262d3f'\n            color='#bee3f8'\n            display='flex'\n            justifyContent='center'\n          >\n            <Button\n              className='groupChatSubmitBtn'\n              color='#262d3f'\n              bg='#bee3f8'\n              onClick={handleSubmit}\n            >\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from '@chakra-ui/icons';\nimport { Box, Stack, Text } from '@chakra-ui/layout';\nimport { useToast } from '@chakra-ui/toast';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { getSender } from '../config/ChatLogics';\nimport ChatLoading from './ChatLoading';\nimport GroupChatModal from './miscellaneous/GroupChatModal';\nimport { Button } from '@chakra-ui/react';\nimport { ChatState } from '../Context/ChatProvider';\nimport './styles.scss';\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n  const positions = ['top-right'];\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get('/api/chat', config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: 'Failed to Load the chats',\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem('userInfo')));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? 'none' : 'flex', md: 'flex' }}\n      flexDir='column'\n      alignItems='center'\n      p={3}\n      w={{ base: '100%', md: '31%' }}\n      borderRadius='lg'\n      borderWidth='1px'\n      bg='#262d3f'\n      borderColor='#3b4253'\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: '28px', md: '30px' }}\n        d='flex'\n        w='100%'\n        color='#bee3f8'\n        justifyContent='space-between'\n        alignItems='center'\n        id='leftSideChatBox'\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d='flex'\n            fontSize={{ base: '17px', md: '10px', lg: '17px' }}\n            rightIcon={<AddIcon />}\n            bg='#bee3f8'\n            color='#262d3f'\n            _hover={{\n              background: '#98c9e5',\n            }}\n            className='addGroupChats'\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d='flex'\n        flexDir='column'\n        p={3}\n        bg='#262d3f'\n        borderColor='#3b4253'\n        w='100%'\n        h='100%'\n        borderRadius='lg'\n        overflowY='hidden'\n      >\n        {chats ? (\n          <Stack overflowY='scroll' className='ChatBoxLists'>\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor='pointer'\n                bg={selectedChat === chat ? '#bee3f8' : '#3b4253'}\n                color={selectedChat === chat ? '#262d3f' : '#bee3f8'}\n                px={3}\n                py={2}\n                borderRadius='lg'\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize='xs'>\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + '...'\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from '@chakra-ui/button';\nimport { useDisclosure } from '@chakra-ui/hooks';\nimport { Input } from '@chakra-ui/input';\nimport { Box, Text } from '@chakra-ui/layout';\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from '@chakra-ui/menu';\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from '@chakra-ui/modal';\nimport { Tooltip } from '@chakra-ui/tooltip';\nimport { BellIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport { Avatar } from '@chakra-ui/avatar';\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useToast } from '@chakra-ui/toast';\nimport ChatLoading from '../ChatLoading';\nimport { Spinner } from '@chakra-ui/spinner';\nimport ProfileModal from './ProfileModal';\nimport NotificationBadge from 'react-notification-badge';\nimport { Effect } from 'react-notification-badge';\nimport { getSender } from '../../config/ChatLogics';\nimport UserListItem from '../userAvatar/UserListItem';\nimport { ChatState } from '../../Context/ChatProvider';\nimport './style.scss';\nimport styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const positions = ['top-right'];\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem('userInfo');\n    history.push('/');\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: 'Please Enter something in search',\n        status: 'warning',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: 'Error Occured!',\n        description: 'Failed to Load the Search Results',\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: 'Error fetching the chat',\n        description: error.message,\n        status: 'error',\n        duration: 4000,\n        isClosable: true,\n        position: positions,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d='flex'\n        justifyContent='space-between'\n        alignItems='center'\n        bg='#262d3f'\n        w='100%'\n        p='5px 10px 5px 10px'\n        borderWidth='5px'\n        borderColor='#3b4253'\n        color='#bee3f8'\n      >\n        <Tooltip\n          label='Search Users to chat it'\n          hasArrow\n          placement='bottom'\n          bg='#bee3f8'\n          color='#3b4253'\n          borderRadius='5px'\n        >\n          <SearchingContainer>\n            <Button className='buttons' variant='ghost' onClick={onOpen}>\n              <BsSearch />\n              <Text\n                className='searchText'\n                d={{ base: 'none', md: 'flex' }}\n                px={4}\n              >\n                Search User\n              </Text>\n            </Button>\n          </SearchingContainer>\n        </Tooltip>\n        <Text fontSize='2xl' fontFamily='Josefin Sans' pr='10px'>\n          Chat-It\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize='2xl' m={1} />\n            </MenuButton>\n            <MenuList pl={2} borderColor='#3b4253' bg='#98c9e5' color='#262d3f'>\n              {!notification.length && 'No New Messages'}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  _hover={{\n                    background: '#98c9e5',\n                  }}\n                  className='messagesBoxs'\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton\n              color='#bee3f8'\n              className='buttons'\n              bg='#262d3f'\n              as={Button}\n              id='profileBtn'\n              borderWidth='1px'\n              borderColor='#3b4253'\n              rightIcon={<ChevronDownIcon />}\n            >\n              <Avatar\n                size='sm'\n                cursor='pointer'\n                name={user.name}\n                src={user.pic}\n                bg='#bee3f8'\n              />\n            </MenuButton>\n            <MenuList\n              color='#bee3f8'\n              bg='#262d3f'\n              borderColor='#3b4253'\n              className='tooltipContainer'\n            >\n              <ProfileModal user={user}>\n                <MenuItem className='lists'>My Profile</MenuItem>{' '}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem className='lists' onClick={logoutHandler}>\n                Logout\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement='left' onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent color='#bee3f8' bg='#262d3f'>\n          <DrawerHeader borderBottomWidth='1px' borderColor='#3b4253'>\n            Search Users\n          </DrawerHeader>\n          <DrawerBody pt='1rem'>\n            <Box d='flex' pb={4}>\n              <Input\n                placeholder='Search by name or email'\n                mr={2}\n                value={search}\n                borderColor='#bee3f8'\n                color='#bee3f8'\n                className='inputesSearch'\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button\n                className='searchBtn'\n                color='#bee3f8'\n                bg='#3b4253'\n                onClick={handleSearch}\n              >\n                Go\n              </Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((u) => (\n                <UserListItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => accessChat(u._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml='auto' d='flex' />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n\nconst SearchingContainer = styled.div`\n  & {\n    & .buttons {\n      &:hover {\n        background: #3b4253;\n      }\n    }\n  }\n\n  @media screen and (max-width: 480px) {\n    & {\n      & .searchText {\n        display: none;\n      }\n    }\n  }\n`;\n","import { Box } from '@chakra-ui/layout';\nimport { useState } from 'react';\nimport Chatbox from '../components/Chatbox';\nimport MyChats from '../components/MyChats';\nimport SideDrawer from '../components/miscellaneous/SideDrawer';\nimport { ChatState } from '../Context/ChatProvider';\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: '100%' }}>\n      {/* =======step 6 fetch all Chats of users conversations and groupChats===== */}\n      {user && <SideDrawer />}\n      <Box d='flex' justifyContent='space-between' w='100%' h='91.5vh' p='10px'>\n        {/* =======step 6 fetch all Chats of users conversations===== */}\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {/* =======step 7 fetch all groupChats of users conversations===== */}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.scss\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}